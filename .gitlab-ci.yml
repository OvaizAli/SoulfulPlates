stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - quality
  - package
  - publish
  - deploy

build-job: # This job runs in the build stage, which runs first.
  image: maven:latest
  stage: build
  tags:
    - test-runner-2
  script:
    - 'cd Backend-Spring-Boot'
    - mvn clean
    - echo "Compiling the code."
    - mvn compile
    - echo "Compile complete."
  artifacts:
    untracked: true
    expire_in: 30 days

test-job:
  image: maven:latest
  stage: test
  tags:
    - test-runner-2
  script:
    - 'cd Backend-Spring-Boot'
    - echo "Running tests..."
    - mvn test
    - echo "Backend Tests Complete"
  artifacts:
    untracked: true
    expire_in: 30 days

code_quality:
  image: openjdk:17
  stage: quality
  tags:
    - test-runner-2
  script:
    - 'cd Backend-Spring-Boot'
    - rm -rf code_smells
    - mkdir code_smells
    - java -jar ./designite/DesigniteJava.jar -i ./src -o ./designite/result
  artifacts:
    untracked: true
    expire_in: 30 days

package-job: # This job runs in the package stage.
  image: maven:latest
  stage: package # It only runs when *both* jobs in the test stage complete successfully.
  # environment: production
  script:
    - 'cd Backend-Spring-Boot'
    - echo "Packaging application..."
    - mvn package
    - echo "Application successfully packaged."
  artifacts:
    untracked: true
    expire_in: 30 days
  dependencies:
    - build-job

publish-job:
  image: docker:latest
  stage: publish
  tags:
    - test-runner-2
  variables:
    # these values may need to be different if using TLS, k8s, etc.
    # You can alternatively set defaults in your runner config
    DOCKER_TLS_CERTDIR: ''
    DOCKER_HOST: 'tcp://docker:2375'
  services:
    - docker:dind
  script:
    # - cd Backend-Spring-Boot
    - pwd
    - whoami
    - echo $SERVER_IP
    - docker --version
    - echo $DOCKER_HUB_USER
    - echo $DOCKER_HUB_PWD
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
    - docker build --no-cache --progress=plain -t docker.io/group11csci5308/main:$CI_COMMIT_SHORT_SHA .
    - docker push docker.io/group11csci5308/main:$CI_COMMIT_SHORT_SHA
  only:
    - main
  artifacts:
    untracked: true
    expire_in: 30 days
  dependencies:
    - build-job
    - package-job

deploy-job:
  image: alpine:latest
  stage: deploy
  tags:
    - test-runner-2
  script:
    - 'cd Backend-Spring-Boot'
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/group11csci5308/main:$CI_COMMIT_SHORT_SHA"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f my-app || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 8080:8080 --name my-app docker.io/group11csci5308/main:$CI_COMMIT_SHORT_SHA"
  environment:
    name: production
    url: http://172.17.2.123:8080
  only:
    - main
